#include "model.h"
                
                std::vector<double> predict(std::vector<double> &pX){
                    
                if (pX[36] <= 0.5){
                    
                if (pX[28] <= 2.5){
                    return std::vector<double>({0.9064748201438849,0.0,0.014388489208633094,0.0,0.02877697841726619,0.03597122302158273,0.014388489208633094,0.0,0.0,0.0});
                } else {
                    return std::vector<double>({0.0,0.0,0.031746031746031744,0.015873015873015872,0.0,0.25396825396825395,0.015873015873015872,0.0,0.047619047619047616,0.6349206349206349});
                }
            
                } else {
                    
                if (pX[60] <= 2.5){
                    return std::vector<double>({0.0,0.0,0.016129032258064516,0.016129032258064516,0.04032258064516129,0.11290322580645161,0.0,0.7741935483870968,0.0,0.04032258064516129});
                } else {
                    return std::vector<double>({0.004296455424274973,0.1310418904403867,0.12567132116004295,0.13533834586466165,0.12567132116004295,0.09881847475832438,0.13211600429645542,0.036519871106337275,0.12567132116004295,0.08485499462943072});
                }
            
                }
            
                }
                int predict_leaf_index(std::vector<double> &pX){
                    
                if (pX[36] <= 0.5){
                    
                if (pX[28] <= 2.5){
                    return 0;
                } else {
                    return 1;
                }
            
                } else {
                    
                if (pX[60] <= 2.5){
                    return 2;
                } else {
                    return 3;
                }
            
                }
            
                }